{"version":3,"sources":["components/Section.js","components/ContactForm.js","components/Filter.js","components/ContactListItem.js","components/ContactsList.js","App.js","index.js"],"names":["Section","title","children","className","ContactForm","nameId","uuid","numberId","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","reset","initialState","this","htmlFor","type","pattern","required","onChange","Component","PropsType","func","isRequired","Filter","ContactListItem","onDeleteContact","onClick","prototype","PropTypes","string","ContactsList","findContact","map","App","contacts","filter","addContact","hasContacts","alert","find","toLocaleLowerCase","normalizedFilter","length","toLowerCase","includes","deleteContact","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35329cc.chunk.js","sourcesContent":["import React from 'react';\nimport './Section.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div className=\"task__section\">\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropsType from 'prop-types';\nimport { v4 as uuid } from 'uuid';\n\nclass ContactForm extends Component {\n  nameId = uuid();\n  numberId = uuid();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      id: uuid(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameId}\n          />\n        </label>\n        <label htmlFor={this.numberId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberId}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.PropsType = {\n  onSubmit: PropsType.func.isRequired,\n};\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  render() {\n    return (\n      <>\n        <h3>Find contacts by name</h3>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n        />\n      </>\n    );\n  }\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li>\n      {name}: {number}\n      <button type=\"submit\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.prototype = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ findContact, onDeleteContact }) => {\n  return (\n    <ul>\n      {findContact().map(({ id, name, number }) => {\n        return (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.prototype = {\n  findContact: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactsList from './components/ContactsList';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = contact => {\n    if (!this.hasContacts(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  hasContacts = name => {\n    return this.state.contacts.find(contact => {\n      return contact.name.toLocaleLowerCase() === name.toLocaleLowerCase();\n    });\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    if (filter.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"header__main\">React HW 002 Phonebook</h1>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.handleChange} />\n          <ContactsList\n            findContact={this.findContact}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}